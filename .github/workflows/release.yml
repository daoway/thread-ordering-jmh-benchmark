name: Release JAR

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn package

      - name: Release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get all jar files from target directory
            const targetDir = path.join(process.env.GITHUB_WORKSPACE, 'target');
            const jarFiles = fs.readdirSync(targetDir)
              .filter(file => file.endsWith('.jar'))
              .map(file => path.join(targetDir, file));
            
            // Create release with jar files
            const tagName = process.env.GITHUB_REF.replace('refs/tags/', '');
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release ${tagName}`,
              generate_release_notes: true
            });
            
            // Upload each jar file
            for (const jarFile of jarFiles) {
              const jarName = path.basename(jarFile);
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                name: jarName,
                data: fs.readFileSync(jarFile)
              });
            }
